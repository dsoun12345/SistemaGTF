<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnguardar0.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAABF1JREFUWEe1
        l72PF0UYx+9EC+IdxDMhCoG7UBOlQAugENACCw0mNDTaKRVKYkEjpXTC30BhTHhpFDXRhASxOiEBJNFC
        RLTDGF+iwN1vhs/3mWd3Z3ZnT4zhe/nuMzPP6z47O/u7qTHEGKfhZng4xvBJDPEH5FJgEEO4y+V7dGfg
        W3CDu/0/TLsk4Hr4HvwWLsMO5M/B9B5FXWJ4iPGch1gR022mBtmcQHtCiF8T2VOZ0OU3+COjG8ib8Hez
        kSZxmc58zuDZImAFVa0WCfMKvGUBhRD/5noOqs3PwU1wI5yH2+Hb2FzA/B7jhBCvMN/ZZjGZp6ymT3eO
        862Um2uw9h+Aj5vBuN8ctgflK0/HZbjFTToURWXAWM/8oiVOuACfcbWhlj9fw/4FeJXHgLA4Z+FaV4/V
        n4ChNhxu/IVwDXeeI1jRC/T0hHiRKD/7beixvOGqFoOQGG3G4Zo8kP8gDrhqgM45H5UhuYV3iTRRPKQ6
        OXwzchcMDuPE+415CNpwM64qMShdGC7i/zSRvkGqn7qhl13VATd5mjdWH3vLhINaK9ElGaarYxLCsSzm
        UV8GlQjUyQln0Hv+vC3WMuVrY5XY+rS68Cpx2QPaU/EU4tHRmBgvKTuWHC5hUx49jTLPWpAKiLaVWLe1
        qZDnuax21RDJSPnDDcRGX27RFdHLztRW2kunJ848cXVagrKAzsq3L4Z3vIabyAXTjaHzXhHE2gb1SHV/
        ZQf6MTD5zsxi+APu8GVDXm0d+bqPEQTbT0S+DSohfghXjUWgA+G0HV4J7/hyGVqThgV6Cz5lVx1XMA97
        JK2OAIM3Mb3LfpWxDo4nXVVJWMIKy6SA/wKRrnv6P+FuV9WB2QZsF2VOJ/RGDM4Cxe/XkidttPg+At+H
        wAroDjYzcSdE4Y7RIRyaHx76HO9yVWnYognUaJPE9zV4W8lJ/xfjfab4N2A4h9Nn3gXhKnypSN6rJP8G
        YKs7J3nIP8mL8Ck36fn3ggkYb6XsK+aaqvgF8mHJghSOaYx+nv2utqeDp6O+htqMs2Zo9pXEOTDegeNl
        DiWLwUWv0qXJJB5jxvGqEy4uQL3n++EH8Dq2E3MwpwJLcTI5gcyKyFCrB+Mt8Cyx/GeWR0139Cvd+Qmp
        Q2apl1A7fpG1O2naQhs7K6KGphKXGK+Fr8OvoD6p3d01hwbCR0r8KdzHfB3yOAr/vthVgrk6EVIRY0+i
        v47nE3AvMY7C0/A8BXC02vmuE+4IwXfB9lVjbRYqWSoC+APNOqFMtSpYqy0LOD4GVxuDyVWu6uDOSgKV
        zDuRWkEhWRGgTFZJ3Swhs+EDQUmUTO3Xpu5AEcGKmCkPswfAuH1dQ5JZ3g8ron0QqRZ1Qq/oGjcdog25
        UpV9XcWWJLMcsidoQnocXgFSb9VJN+sji8SwXgNnYV0xsCcRj8POA9rvnaAC5Bdj0f87VE0vVj4l4QxF
        qO3WieUQP0KkX2DD/1YfDki4Bp7k1r9E8vtzauo+V5+FhbGxLvYAAAAASUVORK5CYII=
</value>
  </data>
</root>